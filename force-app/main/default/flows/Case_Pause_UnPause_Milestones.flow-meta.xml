<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>Set Stopped FLag False</description>
        <name>Set_Stopped_Flag_False</name>
        <label>Set Stopped Flag False</label>
        <locationX>314</locationX>
        <locationY>278</locationY>
        <assignmentItems>
            <assignToReference>CaseIn.IsStopped</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <description>Set Stopped FLag True</description>
        <name>Set_Stopped_Flag_True</name>
        <label>Set Stopped Flag True</label>
        <locationX>50</locationX>
        <locationY>278</locationY>
        <assignmentItems>
            <assignToReference>CaseIn.IsStopped</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <description>Current Status</description>
        <name>Current_Status</name>
        <label>Current Status</label>
        <locationX>314</locationX>
        <locationY>158</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Stop</name>
            <conditionLogic>6 AND (1 OR 2 OR 3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Customer Outstanding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Third Party Outstanding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Awaiting Fix Confirmation</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.IsStopped</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Stopped_Flag_True</targetReference>
            </connector>
            <label>Stop</label>
        </rules>
        <rules>
            <name>Start</name>
            <conditionLogic>4 AND (1 OR 2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Support Outstanding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Access Outstanding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Development Outstanding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseIn.IsStopped</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Stopped_Flag_False</targetReference>
            </connector>
            <label>Start</label>
        </rules>
    </decisions>
    <description>Flags Is stopped when the correct conditions are met</description>
    <interviewLabel>Case - Pause/UnPause Milestones {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Pause/UnPause Milestones</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Current_Status</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Incoming Case</description>
        <name>CaseIn</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
</Flow>
